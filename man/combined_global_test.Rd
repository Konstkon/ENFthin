% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combined_K.R
\name{combined_global_test}
\alias{combined_global_test}
\title{Compined global envelopes}
\usage{
combined_global_test(
  radius,
  observed_statistic_list,
  simulated_statistic_list,
  r_min = 0,
  r_max = 60,
  is.base_end = TRUE
)
}
\arguments{
\item{{radius}}{Vector of the radiuses where the summary functions are evaluated}

\item{{observed_statistics}}{A list containing the values of the observed summary statistics at each value of r}

\item{{simulated_statistics}}{A list containing amatrix where each column consists of the values of the simulated summary statistics at each value of r}

\item{{r_min}}{minimum value of r to be included in the plot}

\item{{r_max}}{maximum value of r to be included in the plot}

\item{{is.base_end}}{A boolean variable. If true then the compined gloabal envelopes for the base and end points patterns will be created. Default value is true.
Otherwise the compined global envelopes for three summary functions(used in cylindrical functions) will be created.}
}
\value{
An object of class "global_envelope" in the GET package.
}
\description{
Creates compined global envelope plots given a set of r values a list of observed summary statistics and a list of matrices
 containing the corresponding summary statistics obtained from the simulations.
}
\examples{
A= combined_global_test(radius_bp_h,
observed_statistic_list = list(observed_statistics_bp_h,observed_statistics_h),
simulated_statistic_list = list(simulated_statistics_bp_h,simulated_statistics_h))
p = plot(A)+labs(x = expression(italic("r")), y = expression(italic("L(r) - r"))) +
 theme(
   text = element_text(size=12),
   axis.text.x  = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
   axis.text.y  = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
   axis.title.x = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = 0, face = "plain"),
   axis.title.y = element_text(color = "grey20", size = 16, angle = 90, hjust = .5, vjust = .5, face = "plain"),
   legend.text  = element_text(color = "grey20", size = 16, angle = 0, hjust = .5, vjust = .5, face = "plain")     )
}
